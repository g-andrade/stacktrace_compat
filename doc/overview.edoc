@title stacktrace_compat
@doc

<a target="_parent" href="https://hex.pm/packages/stacktrace_compat" alt="Hex.pm Package">
    <img src="https://img.shields.io/hexpm/v/stacktrace_compat.svg?style=flat"/></a>

Given the upcoming release of Erlang/OTP 24, `stacktrace_compat' is no longer
maintained as of April 2nd, 2021.

&#x26a0;&#xfe0f; <b>You should discontinue any use of this library</b>
unless you strictly need to maintain compatibility with Erlang/OTP versions
older than 21 (released back in 2018.)

<h5>How do I do that?</h5>

Start by:
<ol>
<li>removing, from `rebar.config':
    <ul>
        <li>under erl_opts, `{parse_transform, stacktrace_transform}'</li>
        <li>under deps, `stacktrace_compat'</li>
    </ul>
</li>
<li>removing, from `your_app.app.src':
    <ul>
        <li>under applications, `stacktrace_compat' (it needn't be there, but it may be)</li>
    </ul>
</li>
</ol>

..and then:
<ol>
<li>search your code for calls to `erlang:get_stacktrace()';</li>
<li>replace them
    with <a target="_parent" href="https://erlang.org/doc/reference_manual/expressions.html#try">the current syntax</a>
    for capturing stacktraces.
</li>
</ol>

<h5>History</h5>

`stacktrace_compat' defined a parse transform (`stacktrace_transform') which, when
applied to modules on OTP 21+, replaced calls to `erlang:get_stacktrace()' with instances
of the stacktrace binding that was to be captured on the closest catch pattern up the
<a target="_parent" href="http://erlang.org/doc/man/erl_syntax.html">abstract syntax tree</a>
(within the same named function.)

If no binding had been defined, a generated name would have been used that was likely to be conflict free.

If no catch pattern was found, no replacement was made.

@end
